{"version":3,"sources":["app/tweak.coffee","app/lib/class.coffee","app/lib/events.coffee","app/lib/common.coffee","app/lib/store.coffee","app/lib/collection.coffee","app/lib/components.coffee","app/lib/component.coffee","app/lib/controller.coffee","app/lib/history.coffee","app/lib/model.coffee","app/lib/router.coffee","app/lib/view.coffee"],"names":[],"mappings":"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","file":"public\\scripts\\tweak.js","sourcesContent":["###\r\n  tweak.js 1.7.4\r\n\r\n  (c) 2014 Blake Newman.\r\n  TweakJS may be freely distributed under the MIT license.\r\n  For all details and documentation:\r\n  http://tweakjs.com\r\n\r\n  Brunch-config wrappes this coffeescript file and its modules into self contained function.\r\n###\r\nwrapper = (root, tweak, require, $) ->\r\n  pTweak = tweak\r\n\r\n  ###\r\n   Assign $ to tweak for internal use and allow to be overridden at anypoint\r\n  ###\r\n  tweak.$ = $\r\n\r\n  ###\r\n   Assign the module loader's require method to tweak.require. By default it\r\n   used the passed require. However, for example, if using Curl then curl can\r\n   be assigned to tweak.require\r\n  ###\r\n  tweak.require = require\r\n\r\n  ###\r\n    By default when creating a new Component if there is not an initial\r\n    external config file relating to that Component then it doesn't matter.\r\n    However when extending lots of Components it is generally better to\r\n    make external relating config objects required to be found by a module loader\r\n    so mistakes are reduced. \r\n  ###\r\n  tweak.strict = false\r\n\r\n  ###\r\n    Restore the previous stored tweak.\r\n  ###\r\n  tweak.noConflict = ->\r\n    root.tweak = pTweak\r\n    @\r\n\r\nroot = (typeof(self) is 'object' and self.self is self and self) or\r\n(typeof(global) is 'object' and global.global is global and global) or\r\nwindow\r\n\r\n### \r\n  To keep alternative frameworks to jQuery available to tweak, \r\n  register/define the appropriate framework to '$'\r\n###\r\nif typeof(define) is 'function' and define.amd\r\n  define ['$', 'exports'], ($, exports) ->\r\n    ###\r\n      This will enable a switch to a CommonJS based system with AMD.\r\n      This may need adjustment to \r\n    ###\r\n    toRequire = (module) -> define [module], (res) -> return res\r\n    wrapper root, root.tweak = exports, toRequire , $\r\nelse if typeof(exports) isnt 'undefined'\r\n  ###\r\n    CommonJS and Node environment\r\n  ###\r\n  try $ = require '$'\r\n  if not $ then try $ = require 'jquery'\r\n  wrapper root, tweak = exports, require, $\r\nelse\r\n  ###\r\n    Typical web environment - even though a module loader is required\r\n    it is best to allow the user to set it up. Example Brunch uses CommonJS\r\n    however it does not work exactly like it does in node so it goes through here\r\n  ###\r\n  wrapper root, root.tweak = {}, require, root.jQuery or root.Zepto or root.ender or root.$\r\n","###\r\n  TweakJS was initially designed in CoffeeScript for CoffeeScripters. It is much\r\n  easier to use the framework in CoffeeScript; however those using JS the\r\n  following helpers will provide extending features that CoffeeScipt possess.\r\n  These can also be used to reduce the file size of compiled CoffeeScript files.\r\n###\r\nclass tweak.Class\r\n  __hasProp: {}.hasOwnProperty\r\n\r\n  ###\r\n    To extend an object with JS use tweak.Extends.\r\n    @param [Object] child The child Object to extend.\r\n    @param [Object] parent The parent Object to inheret methods.\r\n    @return [Object] Extended object\r\n  ###\r\n  extends: (child, parent) ->\r\n    (child, parent) ->\r\n      ctor = ->\r\n        @constructor = child\r\n        return\r\n      for key of parent\r\n        child[key] = parent[key] if @__hasProp.call parent, key\r\n      ctor:: = parent::\r\n      child:: = new ctor()\r\n      child.__super__ = parent::\r\n      child\r\n\r\n  ###\r\n    To super a method with JS use this.super from within the class definition.\r\n    To add super to prototype of a custom object not within the TweakJS classes\r\n    in JS; do {class}.prototype.super = tweak.Super\r\n\r\n    @param [Object] context The context to apply a super call to\r\n    @param [string] name The method name to call super upon.\r\n  ###\r\n  super: (context, name) -> context.__super__[name].call @","###\r\n  Tweak.js has an event system class, this provides functionality to extending\r\n  classes to communicate simply and effectively while maintaining an organised\r\n  structure to your code and applications. Each object can extend the\r\n  tweak.EventSystem class to provide event functionality to classes. Majority of\r\n  Tweak.js modules/classes already extend the EventSystem class, however when\r\n  creating custom objects/classes you can extend the class using the tweak.Extends\r\n  method, please see the Class class in the documentation.\r\n    \r\n  Examples are in JS, unless where CoffeeScript syntax may be unusual. Examples\r\n  are not exact, and will not directly represent valid code; the aim of an example\r\n  is to show how to roughly use a method.\r\n###\r\nclass tweak.Events extends tweak.Class\r\n  \r\n  ###\r\n    Iterate through events to find matching named events. Can be used to add a new event through the optional Boolean build argument\r\n\r\n    @overload findEvent(names, build)\r\n      Find events with a space separated string.\r\n      @param [String] names The event name(s); split on a space.\r\n      @param [Boolean] build (Default = false) Whether or not to add an event object when none can be found.\r\n      @return [Array<Event>] All event objects that are found/created then it is returned in an Array.\r\n\r\n    @overload findEvent(names, build)\r\n      Find events with an array of names (strings).\r\n      @param [Array<String>] names An array of names (strings).\r\n      @param [Boolean] build (Default = false) Whether or not to add an event object when none can be found.\r\n      @return [Array<Event>] All event objects that are found/created then it is returned in an Array.\r\n\r\n    @example Delimited string\r\n      // This will find all events in the given space delimited string.\r\n      var model;\r\n      model = new Model();\r\n      model.findEvent('sample:event another:event');\r\n\r\n    @example Delimited string with build\r\n      // This will find all events in the given space delimited string.\r\n      // If event cannot be found then it will be created.\r\n      var model;\r\n      model = new Model();\r\n      model.findEvent('sample:event another:event', true);\r\n\r\n    @example Array of names (strings)\r\n      // This will find all events from the names in the given array.\r\n      var model;\r\n      model = new Model();\r\n      model.findEvent(['sample:event', 'another:event']);\r\n\r\n    @example Array of names (strings) with build\r\n      // This will find all events from the names in the given array.\r\n      // If event cannot be found then it will be created.\r\n      var model;\r\n      model = new Model();\r\n      model.findEvent(['sample:event', 'another:event'], true);\r\n\r\n  ###\r\n  findEvent: (names, build = false) ->\r\n    # Split name if it is a string\r\n    if typeof names is 'string'\r\n      names = names.split /\\s+/\r\n    # Initiate @__events property if not yet initialised\r\n    events = @__events = @__events or {}\r\n    # Search for each name\r\n    for item in names\r\n      # Check if event exists\r\n      if not event = events[item]\r\n        # If we are to build then add a default event else continue the iteration\r\n        if build then event = @__events[item] = name: item, __callbacks: []\r\n        else continue\r\n      # Push found/created event into the returning array\r\n      event\r\n\r\n  ###\r\n    Bind a callback to the event system. The callback is invoked when an\r\n    event is triggered. Events are added to an object based on their name.\r\n\r\n    Name spacing is useful to separate events into their relevant types.\r\n    It is typical to use colons for name spacing. However you can use any other\r\n    name spacing characters such as / \\ - _ or .\r\n    \r\n    @overload addEvent(names, callback, context, max)\r\n      Bind a callback to event(s) with context and/or total calls\r\n      @param [String, Array<String>] names The event name(s). Split on a space, or an array of event names.\r\n      @param [Function] callback The event callback function.\r\n      @param [Object] context (optional, default = this) The contextual object of which the event to be bound to.\r\n      @param [Number] max (optional, default = null). The maximum calls on the event listener. After the total calls the events callback will not invoke.\r\n\r\n    @overload addEvent(names, callback, max, context)\r\n      Bind a callback to event(s) with total calls and/or context\r\n      @param [String, Array<String>] names The event name(s). Split on a space, or an array of event names.\r\n      @param [Function] callback The event callback function.\r\n      @param [Number] max The maximum calls on the event listener. After the total calls the events callback will not invoke.\r\n      @param [Object] context (optional, default = this) The contextual object of which the event to be bound to.\r\n\r\n    @example Bind a callback to event(s)\r\n      var model;\r\n      model = new Model();\r\n      model.addEvent('sample:event', function(){\r\n        alert('Sample event triggered.')\r\n      });\r\n    \r\n    @example Bind a callback to event(s) with total calls\r\n      var model;\r\n      model = new Model();\r\n      model.addEvent('sample:event', function(){\r\n        alert('Sample event triggered.')\r\n      }, 4);\r\n\r\n    @example Bind a callback to event(s) with a separate context without total calls\r\n      var model;\r\n      model = new Model();\r\n      model.addEvent('sample:event', function(){\r\n        alert('Sample event triggered.')\r\n      }, this);\r\n\r\n    @example Bind a callback to event(s) with a separate context with maximum calls\r\n      var model;\r\n      model = new Model();\r\n      model.addEvent('sample:event', function(){\r\n        alert('Sample event triggered.')\r\n      }, this, 3);\r\n\r\n  ###\r\n  addEvent: (names, callback, context = @, max) ->\r\n    # Removes the need to have context when trying to pass max calls\r\n    if typeof context is 'number' or context is null\r\n      max = context\r\n      context = max or @\r\n    # Find events / build the event path, then iterate through them.\r\n    for event in @findEvent names, true\r\n      ignore = false\r\n      # Iterate through all callbacks to this event\r\n      for item in event.__callbacks\r\n        # If the callback and context for an event match then ignore adding the event, but update the current event.\r\n        if item.callback is callback and context is item.ctx\r\n          # Update events maximum calls property\r\n          item.max = max\r\n          # Reset event calls and make event listen again\r\n          item.calls = 0\r\n          item.listen = ignore = true\r\n      if not ignore then event.__callbacks.push {ctx: context, callback, max, calls: 0, listen: true}\r\n    return\r\n\r\n  ###\r\n    Remove a previously bound callback function. Removing events can be limited to context and its callback.\r\n    @param [String] names The event name(s). Split on a space, or an array of event names.\r\n    @param [Function] callback (optional) The callback function of the event. If no specific callback is given then all the events under event name are removed.\r\n    @param [Object] context (default = this) The contextual object of which the event is bound to. If this matches then it will be removed, however if set to null then all events no matter of context will be removed.\r\n\r\n    @example Unbind a callback from event(s)\r\n      var model;\r\n      model = new Model();\r\n      model.removeEvent('sample:event another:event', @callback);\r\n\r\n    @example Unbind all callbacks from event(s)\r\n      var model;\r\n      model = new Model();\r\n      model.removeEvent('sample:event another:event');\r\n  ###\r\n  removeEvent: (names, callback, context = @) ->\r\n    # Iterate through found events\r\n    for event in @findEvent names\r\n      # Check to see if the callback and/or context matches.\r\n      # If event matches criteria then delete.\r\n      for key, item of event.__callbacks\r\n        if (not callback? or callback is item.callback) and (not context? or context is item.ctx)\r\n          event.__callbacks.splice key,1\r\n      # If callbacks is empty then delete from @__events object\r\n      if event.__callbacks.length is 0\r\n        delete @__events[event.name]\r\n\r\n    return\r\n\r\n  ###\r\n    Trigger events by name.\r\n    @overload triggerEvent(names, params)\r\n      Trigger events by name only.\r\n      @param [String, Array<String>] names The event name(s). Split on a space, or an array of event names.\r\n      @param [...] params Parameters to pass into the callback function.\r\n\r\n    @overload triggerEvent(options, params)\r\n      Trigger events by name and context.\r\n      @param [Object] options Options and limiters to check against callbacks.\r\n      @param [...] params Parameters to pass into the callback function.\r\n      @option options [String, Array<String>] names The event name(s). Split on a space, or an array of event names.\r\n      @option options [Context] context (Default = null) The context of the callback to check against a callback.\r\n\r\n    @example Triggering event(s)\r\n      var model;\r\n      model = new Model();\r\n      model.triggerEvent('sample:event, another:event');\r\n\r\n    @example Triggering event(s) with parameters\r\n      var model;\r\n      model = new Model();\r\n      model.triggerEvent('sample:event another:event', 'whats my name', 'its...');\r\n\r\n    @example Triggering event(s) but only with matching context\r\n      var model;\r\n      model = new Model();\r\n      model.triggerEvent({context:@, name:'sample:event another:event'});\r\n  ###\r\n  triggerEvent: (names, params...) ->\r\n    # If names is an object then set names and context\r\n    if typeof names is 'object' and not names instanceof Array\r\n      names = names.names or []\r\n      context = names.context or null\r\n    \r\n    # Iterate through found events\r\n    for event in @findEvent names\r\n      # Iterate through this event's callbacks\r\n      for item in event.__callbacks\r\n        # If in listening state and if there is a context limit calls to the events with matching context\r\n        if item.listen and (not context? or context is item.ctx)\r\n          # Update the total calls to this event callback\r\n          if item.max? and ++item.calls >= item.max\r\n            # Event has hit call limit, so set its event listening state to false\r\n            item.listen = false\r\n          # Call the events callback - done asynchronously.\r\n          setTimeout (-> @callback.apply @ctx, params; return).bind(item), 0\r\n    return\r\n\r\n  ###\r\n    Set events listening state, maximum calls, and total calls limited by name and options (callback, context).\r\n    @param [String] names The event name(s). Split on a space, or an array of event names.\r\n    @param [Object] options Optional limiters and update values.\r\n    @option options [Object] context The contextual object to limit updating events to.\r\n    @option options [Function] callback Callback function to limit updating events to.\r\n    @option options [Number] max Set a new maximum calls to an event.\r\n    @option options [Number] calls Set the amount of calls that has been triggered on this event.\r\n    @option options [Boolean] reset (Default = false) If true then calls on an event get set back to 0.\r\n    @option options [Boolean] listen Whether to enable or disable listening to event.\r\n\r\n    @example Updating event(s) to not listen\r\n      var model;\r\n      model = new Model();\r\n      model.updateEvent('sample:event, another:event', {listen:false});\r\n\r\n    @example Updating event(s) to not listen, however limited by optional context and/or callback\r\n      // Limit events that match to a context and callback.\r\n      var model;\r\n      model = new Model();\r\n      model.updateEvent('sample:event, another:event', {context:@, callback:@callback, listen:false});\r\n\r\n      // Limit events that match to a callback.\r\n      var model;\r\n      model = new Model();\r\n      model.updateEvent('sample:event, another:event', {callback:@anotherCallback, listen:false});\r\n\r\n      // Limit events that match to a context.\r\n      var model;\r\n      model = new Model();\r\n      model.updateEvent('sample:event, another:event', {context:@, listen:false});\r\n\r\n    @example Updating event(s) maximum calls and reset its current calls\r\n      var model;\r\n      model = new Model();\r\n      model.updateEvent('sample:event, another:event', {reset:true, max:100});\r\n\r\n    @example Updating event(s) total calls\r\n      var model;\r\n      model = new Model();\r\n      model.updateEvent('sample:event, another:event', {calls:29});\r\n  ###\r\n  updateEvent: (names, options = {}) ->\r\n    # Set limiters and update properties\r\n    ctx = options.context\r\n    max = options.max\r\n    reset = options.reset\r\n    calls = if reset then 0 else options.calls or 0\r\n    listen = options.listen\r\n    callback = options.callback\r\n\r\n    # Iterate through found events\r\n    for event in @findEvent names\r\n      # Iterate through this event's callbacks\r\n      for item in event.__callbacks\r\n        # Check to see if the callback and/or context matches.\r\n        if (not ctx? or ctx isnt item.ctx) and (not callback? or callback isnt item.callback)\r\n          # Update event properties\r\n          if max? then item.max = max\r\n          if calls? then item.calls = calls\r\n          if listen? then item.listen = listen\r\n    return\r\n\r\n  ###\r\n    Resets the events on this object to empty.\r\n  ###\r\n  resetEvents: -> @__events = {}\r\n","###\r\n  This class contains common shared functionality. The aim to reduce repeated code\r\n  and overall file size of the framework.\r\n\r\n  Examples are in JS, unless where CoffeeScript syntax may be unusual. Examples\r\n  are not exact, and will not directly represent valid code; the aim of an example\r\n  is to show how to roughly use a method.\r\n###\r\nclass tweak.Common\r\n  ###\r\n    Merge properties from object from one object to another. (First object is the object to take on the properties from the second object).\r\n    @param [Object, Array] one The Object/Array to combine properties into.\r\n    @param [Object, Array] two The Object/Array that shall be combined into the first object.\r\n    @return [Object, Array] Returns the resulting combined object from two Object/Array.\r\n  ###\r\n  combine: (one, two) ->\r\n    for key, prop of two\r\n      if typeof prop is 'object'\r\n        one[key] ?= if prop instanceof Array then [] else {}\r\n        one[key] = tweak.Common.combine one[key], prop\r\n      else\r\n        one[key] = prop\r\n    one\r\n\r\n  ###\r\n    Clone an object to remove reference to original object or simply to copy it.\r\n    @param [Object, Array] ref Reference object to clone.\r\n    @return [Object, Array] Returns the copied object, while removing object references.\r\n  ###\r\n  clone: (ref) ->\r\n    # Handle the 3 simple types, and null or undefined. Peturns itself if it tries to clone itself otherwise it will stack overflow\r\n    return ref if null is ref or 'object' isnt typeof ref or ref is @\r\n\r\n    # Handle Date\r\n    if ref instanceof Date\r\n      copy = new Date()\r\n      copy.setTime ref.getTime()\r\n      return copy\r\n\r\n    # Handle Array\r\n    if ref instanceof Array\r\n      copy = []\r\n    else if typeof ref is 'object'\r\n      copy = {}\r\n    else\r\n      throw new Error 'Unable to copy object, type not supported.'\r\n\r\n    # Handle Object\r\n    for attr of ref\r\n      if ref.hasOwnProperty(attr) then copy[attr] = tweak.Common.clone ref[attr]\r\n    return copy\r\n\r\n  ###\r\n    Convert a simple JSON string/object.\r\n    @param [JSONString, JSONObject] data JSONString/JSONObject to convert to vice versa.\r\n    @return [JSONObject, JSONString] Returns JSON data of the opposite data type\r\n  ###\r\n  parse: (data) -> JSON[if typeof data is 'string' then 'parse' else 'stringify'] data\r\n\r\n  ###\r\n    Try to find a module by name in multiple paths. A final surrogate if available will be returned if no module can be found.\r\n    @param [Array<String>] paths An array of context paths.\r\n    @param [String] module The module path to convert to absolute path; based on the context path.\r\n    @param [Object] surrogate (Optional) A surrogate Object that can be used if there is no module found.\r\n    @return [Object] Returns an Object that has the highest priority.\r\n    @throw When an object cannot be found and no surrogate is provided the following error message will appear -\r\n      \"No default module (#{module name}) for component #{component name}\".\r\n    @throw When an object is found but there is an error during processing the found object the following message will appear -\r\n      \"Module (#{path}) found. Encountered #{e.name}: #{e.message}\".\r\n  ###\r\n  findModule: (contexts, module, surrogate) ->\r\n    # Iterate each context\r\n    for context in contexts\r\n      # Convert path to absolute\r\n      try\r\n        return tweak.Common.require context, module\r\n      catch e\r\n        # If the error thrown isn't a direct call on 'Error' Then the module was found however there was an internal error in the module\r\n        if e.name isnt 'Error'\r\n          e.message = \"Module (#{context}}) found. Encountered #{e.name}: #{e.message}\"\r\n          throw e\r\n    return surrogate if surrogate?\r\n    # If no paths are found then throw an error\r\n    throw new Error \"No default module (#{module}) for component #{contexts[0]}\"\r\n\r\n  ###\r\n    Require method to find a module in a given context path and module path.\r\n    The context path and module path are merged together to create an absolute path.\r\n    @param [String] context The context path.\r\n    @param [String] module The module path to convert to absolute path, based on the context path.\r\n    @param [Object] surrogate (Optional) A surrogate Object that can be used if there is no module found.\r\n    @return [Object] Required object or the surrogate if requested.\r\n    @throw Error upon no found module.\r\n  ###\r\n  require: (context, module, surrogate) ->\r\n    # Convert path to absolute\r\n    path = tweak.Common.relToAbs context, module\r\n    try\r\n      return tweak.require path\r\n    catch e\r\n      return surrogate if surrogate?\r\n      throw e\r\n    return\r\n\r\n  ###\r\n    Split a name out to individual absolute names.\r\n    Names formated like './cd[2-4]' will return an array or something like ['album1/cd2','album1/cd3','album1/cd4'].\r\n    Names formated like './cd[2-4]a ./item[1]/model' will return an array or something\r\n    like ['album1/cd2a','album1/cd3a','album1/cd4a','album1/item0/model','album1/item1/model'].\r\n    @param [String] context The current context's name.\r\n    @param [String, Array<String>] names The string to split into separate component names.\r\n    @return [Array<String>] Array of absolute names.\r\n  ###\r\n  splitMultiName: (context, names) ->\r\n    values = []\r\n    # Reg-ex to split out the name prefix, suffix and the amount to expand by\r\n    reg = /^(.*)\\[(\\d*)(?:[,\\-](\\d*)){0,1}\\](.*)$/\r\n\r\n    # Split name if it is a string\r\n    if typeof names is 'string'\r\n      names = names.split /\\s+/\r\n\r\n    # Iterate through names in\r\n    for item in names\r\n      result = reg.exec item\r\n      # If Reg-ex matches then expand the name\r\n      if result?\r\n        prefix = result[1]\r\n        min = result[2] or 0\r\n        max = result[3] or min\r\n        suffix = result[4]\r\n        while min <= max\r\n          values.push tweak.Common.relToAbs context, \"#{prefix}#{min++}#{suffix}\"\r\n      else\r\n        values.push tweak.Common.relToAbs context, item\r\n    values\r\n\r\n  ###\r\n    Convert relative path to an absolute path; relative path defined by ./ or .\\\r\n    It will also reduce the prefix path by one level per ../ in the path.\r\n    @param [String] context The context path.\r\n    @param [String] name The path to convert to absolute path, based on the context path.\r\n    @return [String] Absolute path.\r\n  ###\r\n  relToAbs: (context, name) ->\r\n    amount = name.split(/\\.{2,}[\\/\\\\]*/).length-1 or 0\r\n    context = context.replace new RegExp(\"([\\\\/\\\\\\\\]*[^\\\\/\\\\\\\\]+){#{amount}}[\\\\/\\\\\\\\]?$\"), ''\r\n    name.replace /^(\\.+[\\/\\\\]*)+/, \"#{context}/\"\r\n      \r\ntweak.Common = new tweak.Common()","###\r\n  This is the base Class for dynamic storage based modules. A good way to think of\r\n  a Store/Model/Collection is to think it as Cache; it can be used to Store data for\r\n  temporary access. It receives and sends its data to a secondary permanent storage\r\n  solution. The Store class is the base functionality shared between a Model and\r\n  Collection. Classes that inherit Store class trigger events when it's storage\r\n  base is updated, this makes it easy to listen to changes and to action as and\r\n  when required.\r\n\r\n  Examples are in JS, unless where CoffeeScript syntax may be unusual. Examples\r\n  are not exact, and will not directly represent valid code; the aim of an example\r\n  is to show how to roughly use a method.\r\n###\r\nclass tweak.Store extends tweak.Events\r\n\r\n  # @property [String] The type of storage, i.e. 'collection' or 'model'\r\n  _type: 'BASE'\r\n  # @property [Integer] Length of the Stores data\r\n  length: 0\r\n\r\n  ###\r\n    Default initialiser function\r\n  ###\r\n  init: ->\r\n    \r\n  ###\r\n    Set a single property or multiple properties.\r\n\r\n    @overload set(name, data, silent)\r\n      Set an individual property by the name (String).\r\n      @param [String] name The name of the property.\r\n      @param [*] data Data to Store in the property.\r\n      @param [Boolean] silent (optional, default = false) If true events are not triggered upon any changes to the data.\r\n\r\n    @overload set(data, silent)\r\n      Set multiple properties by an object of data.\r\n      @param [Object] data Key and property based object.\r\n      @param [Boolean] silent (optional, default = false) If true events are not triggered upon any changes to the data.\r\n\r\n    @example Setting single property.\r\n      this.set('sample', 100);\r\n\r\n    @example Setting multiple properties.\r\n      this.set({sample:100, second:2});\r\n  \r\n    @example Setting properties silently.\r\n      this.set('sample', 100, true);\r\n      this.set({sample:100, second:2}, true);\r\n\r\n    @event changed:#{key} Triggers an event and passes in changed property.\r\n    @event changed Triggers a generic event that the Store has been updated.\r\n  ###\r\n  set: (data, params...) ->\r\n    silent = params[0]\r\n    type = typeof data\r\n    if type is 'string' or type is 'number'\r\n      prevProps = data\r\n      data = {}\r\n      data[prevProps] = params[0]\r\n      silent = params[1]\r\n\r\n    obj = {}\r\n    for key, prop of data\r\n      prev = @_data[key]\r\n      if not prev? then @length++\r\n      @_data[key] = @[\"__set#{key.replace /^[a-z]/, (m) -> m.toUpperCase()}\"]?(prop) or prop\r\n      if not silent then @triggerEvent \"changed:#{key}\", prop\r\n\r\n    if not silent then @triggerEvent 'changed'\r\n    return\r\n\r\n  ###\r\n    Returns whether two objects are the same (similar).\r\n    @param [Object, Array] one Object to compare to Object two.\r\n    @param [Object, Array] two Object to compare to Object one.\r\n    @return [Boolean] Are the two Objects the same/similar?\r\n\r\n    @example comparing objects.\r\n      this.same({'sample':true},{'sample':true}); //true\r\n      this.same({'sample':true},{'not':true}); //false\r\n  ###\r\n  same: (one, two) ->\r\n    for key, prop of one\r\n      if not two[key]? or two[key] isnt prop then return false\r\n    true\r\n    \r\n  ###\r\n    Get a property from the base storage.\r\n    @param [String, Array<String>] property Property/properties to retrieve from the base storage.\r\n    @param [...] params Parameters to pass into getter method\r\n    @return [*] Property/properties from base storage.\r\n    \r\n    @overload get()\r\n      Get all properties from base storage.\r\n      @return [Array<*>, Object] Properties from base storage.\r\n\r\n    @overload get(name)\r\n      Get an individual property by a property name.\r\n      @param [String] name The name of the property.\r\n      @return [*] Property from base storage.\r\n\r\n    @overload get(limit)\r\n      Get multiple properties from base storage.\r\n      @param [Array<String>] limit Array of property names to retrive from the base storage.\r\n      @return [Array<*>, Object] Properties from base storage.\r\n\r\n    @example Get property.\r\n      this.get('sample');\r\n\r\n    @example Get mutiple properties.\r\n      this.get(['sample', 'pizza']);\r\n\r\n    @example Get all properties.\r\n      this.get();\r\n  ###\r\n  get: (limit, params...) ->\r\n    if not limit?\r\n      limit = for key, item of @_data then key\r\n    if typeof limit is 'string' or typeof limit is 'number' then limit = [limit]\r\n    base = if @_data instanceof Array then [] else {}\r\n    for item, i in limit\r\n      data = @[\"__get#{\"#{item}\".replace /^[a-z]/, (m) -> m.toUpperCase()}\"]? params...\r\n      if not data? then data = @_data[item]\r\n      base[item] = data\r\n    if i <= 1 then base = base[item]\r\n    base\r\n    \r\n\r\n  ###\r\n    Checks if a property/properties exists from the base storage.\r\n    @param [String, Array<String>] limit Property/properties name to look for in the base storage.\r\n    @param [...] params Parameters to pass into getter method\r\n    @return [Boolean] Returns true or false depending if the property exists in the base storage.\r\n\r\n    @overload has(name)\r\n      Get an individual property by a property name.\r\n      @param [String] name The name of the property.\r\n      @return [*] Property from base storage.\r\n\r\n    @overload has(limit)\r\n      Get multiple properties from base storage.\r\n      @param [Array<String>] limit Array of property names to retrive from the base storage.\r\n      @return [Array<*>, Object] Properties from base storage.\r\n\r\n    @example Get property.\r\n      this.has('sample');\r\n\r\n    @example Get mutiple properties.\r\n      this.has(['sample', 'pizza']);\r\n  ###\r\n  has: (limit, params) ->\r\n    if typeof limit is 'string' or typeof limit is 'number' then limit = [limit]\r\n    for item, i in limit\r\n      data = @[\"__get#{item.replace /^[a-z]/, (m) -> m.toUpperCase()}\"]? params...\r\n      if not data? and not @_data[item]? then return false\r\n    true\r\n\r\n  ###\r\n    Returns an array of keys where the property matches given value.\r\n    @param [*] value Value to check.\r\n    @return [Array<String>] Returns an array of keys where the property matches given value.\r\n    \r\n    @example find keys of base storage where the value matches.\r\n      this.where(1009); //[3,87]\r\n  ###\r\n  where: (value) ->\r\n    result = []\r\n    data = @_data\r\n    for key, prop of data\r\n      if prop is value then result.push key\r\n    return result\r\n\r\n  ###\r\n    Reset the Store length to 0 and triggers change event.\r\n\r\n    @event changed Triggers a generic event that the Store has been updated.\r\n  ###\r\n  reset: ->\r\n    @length = 0\r\n    @triggerEvent 'changed'\r\n    return\r\n\r\n  ###\r\n    Import data into the Store.\r\n    @param [Object, Array] data data to import.\r\n    @param [Boolean] silent (optional, default = true) If false events are not triggered upon any changes.\r\n\r\n    @event changed:#{index} Triggers an event and passes in changed property.\r\n    @event changed Triggers a generic event that the Collection has been updated.\r\n  ###\r\n  import: (data, silent = true) ->\r\n    for key, item of data\r\n      if @_data[key]?.import?\r\n        @_data[key].import item, silent\r\n      else\r\n        @set key, item, silent\r\n    return\r\n\r\n  ###\r\n    Export the Store's data.\r\n    @param [Array<String>] limit (default = all properties) Limit which properties to convert.\r\n    @return [Object] Collection as a JSONString\r\n  ###\r\n  export: (limit) ->\r\n    res = {}\r\n    limit ?= for key, item of @_data then key\r\n    for key in limit when (item = @get key)?\r\n      if item.export?\r\n        res[key] = item.export()\r\n      else res[key] = item\r\n    res","###\r\n  A Collection is used by other modules like the Controller to store, retrieve and\r\n  listen to a set of ordered data. A Collection triggers events when its storage\r\n  base is updated, this makes it easy to listen to changes and to action as and\r\n  when required. The Collection data is not a database, but a JSON representation\r\n  of its data can be exported and imported to and from storage sources. In Tweak.js\r\n  the Model extends the Store module - which is the core functionality shared between\r\n  Model's and Collection's. The main difference between a Model and collection it\r\n  the base of its data type. The Model uses an object as its base data type and a\r\n  collection base type is an Array.\r\n\r\n  To further extend a Collection, Tweak.js allows data to be imported and exported.\r\n  When doing this please know that all data stored should be able to be converted\r\n  to a JSON string. A Collection of Models can also be exported and imported to\r\n  and from a database, as it has an inbuilt detection for when a value should be\r\n  created as a Model representation. Keep note that a Collection of Collections is\r\n  not appropriate as this becomes complicated and it can get messy quickly. It\r\n  should be possible to export and import data of that nature, but it’s not\r\n  recommended - always try to keep stored data structured simply.\r\n\r\n  Examples are in JS, unless where CoffeeScript syntax may be unusual. Examples\r\n  are not exact, and will not directly represent valid code; the aim of an example\r\n  is to show how to roughly use a method.\r\n###\r\nclass tweak.Collection extends tweak.Store\r\n  # @property [String] The type of Store, i.e. 'collection' or 'model'.\r\n  _type: 'collection'\r\n\r\n  ###\r\n    @private\r\n    Method to trigger a change event for all of the properties in the Collection\r\n  ###\r\n  __fullTrigger = (data, trigger) ->\r\n    for key, item of data then trigger \"changed:#{key}\", item\r\n    triggerEvent 'changed', data\r\n\r\n  ###\r\n    The constructor initialises the controllers unique ID and its initial data.\r\n\r\n    @example Creating a Collection with predefined set of data.\r\n      var collection;\r\n      collection = new tweak.Collection([\r\n        new Model(),\r\n        new Model()\r\n      ]);\r\n  ###\r\n  constructor: (@_data = []) ->\r\n\r\n  ###\r\n    Add a new property to the end of the Collection.\r\n    @param [*] data Data to add to the end of the Collection.\r\n    @param [Boolean] silent (optional, default = false) If true events are not triggered upon any changes.\r\n\r\n    @event changed:#{key} Triggers an event and passes in changed property.\r\n    @event changed Triggers a generic event that the Collection has been updated.\r\n  ###\r\n  add: (data, silent) ->\r\n    @set @length, data, silent\r\n    return\r\n\r\n  ###\r\n    Get an element at specified index.\r\n    @param [Number] index Index of property to return.\r\n    @return [*] Returned data from the specified index.\r\n  ###\r\n  at: (index) -> @get index\r\n\r\n  ###\r\n    Push a new property to the end of the Collection.\r\n    @param [*] data Data to add to the end of the Collection.\r\n    @param [Boolean] silent (optional, default = false) If true events are not triggered upon any changes.\r\n\r\n    @event changed:#{key} Triggers an event and passes in changed property.\r\n    @event changed Triggers a generic event that the Collection has been updated.\r\n  ###\r\n  push: (data, silent) ->\r\n    @set @length, data, silent\r\n    return\r\n\r\n  ###\r\n    Splice method that allows for event triggering on the base object.\r\n    @param [Number] position The position to insert the property at into the Collection.\r\n    @param [Number] remove The amount of properties to remove from the Collection.\r\n    @param [Array<*>] data an array of data to insert into the Collection.\r\n    @param [Boolean] silent (optional, default = false) If true events are not triggered upon any changes.\r\n\r\n    @event changed:#{key} Triggers an event and passes in changed property.\r\n    @event changed Triggers a generic event that the Collection has been updated.\r\n\r\n    @example Removing four properties from the 6th position in the array.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.splice(5, 4);\r\n\r\n    @example Inserting two properties from the 3rd position in the array.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.splice(2, 0, ['100', '200']);\r\n\r\n    @example Silently insert two properties from the 3rd position in the array.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.splice(2, 0, ['100', '200'], true);\r\n  ###\r\n  splice: (position, remove, data, silent = false) ->\r\n    @_data.splice position, remove, data...\r\n    @length = @_data.length\r\n    if not silent then __fullTrigger @_data, @triggerEvent\r\n    return\r\n\r\n  ###\r\n    Insert values into base data at a given index (Short cut to splice method).\r\n    @param [Number] index The index to insert the property at into the Collection.\r\n    @param [Array<*>] data an array of data to insert into the Collection.\r\n    @param [Boolean] silent (optional, default = false) If true events are not triggered upon any changes.\r\n\r\n    @event changed:#{key} Triggers an event and passes in changed property.\r\n    @event changed Triggers a generic event that the Collection has been updated.\r\n\r\n\r\n    @example Inserting two properties from the 3rd position in the array.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.insert(2, ['100', '200']);\r\n\r\n    @example Silently insert two properties from the 3rd position in the array.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.splice(2, ['100', '200'], true);\r\n  ###\r\n  insert: (index, data, silent) ->\r\n    @splice position, 0, data, silent\r\n    return\r\n\r\n  ###\r\n    Adds property to the first index of the Collection.\r\n    @param [Array<*>] data an array of data to insert at the first index of the Collection.\r\n    @param [Boolean] silent (optional, default = false) If true events are not triggered upon any changes.\r\n\r\n    @event changed:#{index} Triggers an event and passes in changed property.\r\n    @event changed Triggers a generic event that the Collection has been updated.\r\n    @return [Number] The length of the Collection.\r\n  ###\r\n  unshift: (data, silent) ->\r\n    @splice 0, 0, data, silent\r\n    @length\r\n\r\n  ###\r\n    Remove a single property or many properties from the Collection.\r\n\r\n    @overload remove(index, silent)\r\n      Remove an individual property from the Collection.\r\n      @param [String] index The index to remove from the Collection.\r\n      @param [Boolean] silent (optional, default = false) If true events are not triggered upon any changes to the data.\r\n\r\n    @overload remove(data, silent)\r\n      Remove multiple properties from the Collection by an Array of keys (Strings).\r\n      @param [Array] keys An array of keys (indexes) to remove.\r\n      @param [Boolean] silent (optional, default = false) If true events are not triggered upon any changes to the data.\r\n\r\n    @event removed:#{index} Triggers an event based on what properties have been removed.\r\n    @event changed Triggers a generic event that the Collection has been changed.\r\n\r\n    @example Remove a single property.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.remove(3);\r\n\r\n    @example Remove multiple properties.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.remove([1,3]);\r\n\r\n    @example Remove properties silently.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.remove([4,2], true);\r\n      collection.remove(1, true);\r\n  ###\r\n  remove: (keys, silent) ->\r\n    if not (keys instanceof Array) then keys = [keys]\r\n    for index in keys\r\n      @_data.splice index, 1\r\n      if not silent then @triggerEvent \"removed:#{index}\"\r\n    if not silent then @triggerEvent 'changed'\r\n    return\r\n\r\n  ###\r\n    Remove an element at a specified index.\r\n    @param [Number] index Index of property to remove.\r\n    @param [Boolean] silent (optional, default = false) If true events are not triggered upon any changes.\r\n    \r\n    @example Remove a property at a given index.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.removeAt(1);\r\n\r\n    @example Silently remove a property at a given index.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.removeAt(3, true);\r\n  ###\r\n  removeAt: (index, silent) ->\r\n    element = @at index\r\n    for key, prop of element\r\n      @remove key, silent\r\n    return\r\n\r\n  ###\r\n    Remove a property at the last index of the Collection.\r\n    @param [Boolean] silent (optional, default = false) If true events are not triggered upon any changes.\r\n\r\n    @event removed:#{key} Triggers an event based on what property has been removed.\r\n    @event changed Triggers a generic event that the Collection has been updated.\r\n    @return [*] The property value that was removed.\r\n\r\n    @example Remove the last property from the Collection.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.pop();\r\n\r\n    @example Silently remove the last property from the Collection.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.pop(true);\r\n  ###\r\n  pop: (silent) ->\r\n    length = @length-1\r\n    result = @_data[length]\r\n    @remove length, silent\r\n    result\r\n\r\n  ###\r\n    Remove a property at the first index of the Collection.\r\n    @param [Boolean] silent (optional, default = false) If true events are not triggered upon any changes.\r\n\r\n    @event removed:#{key} Triggers an event based on what property has been removed.\r\n    @event changed Triggers a generic event that the Collection has been updated.\r\n    @return [*] The property value that was removed.\r\n\r\n    @example Remove the first property from the Collection.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.shift();\r\n\r\n    @example Silently remove the first property from the Collection.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.shift(true);\r\n  ###\r\n  shift: (silent) ->\r\n    result = @_data[0]\r\n    @remove 0, silent\r\n    result\r\n\r\n  ###\r\n    Reduce the collection by removing properties from the first index.\r\n    @param [Number] length The length of the Array to shorten to.\r\n\r\n    @example Remove the first five properties from the Collection.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.reduce(5);\r\n\r\n    @example Silently remove the first five property from the Collection.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.reduce(5, true);\r\n  ###\r\n  reduce: (length, silent) ->\r\n    @splice 0, length, silent\r\n    return\r\n\r\n  ###\r\n    Reduce the collection by removing properties from the last index.\r\n    @param [Number] length The length of the Array to shorten to.\r\n\r\n    @example Remove the first five properties from the Collection.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.reduce(5);\r\n\r\n    @example Silently remove the first five property from the Collection.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.reduce(5, true);\r\n  ###\r\n  reduceRight: (length, silent) ->\r\n    @splice 0, @length-length, silent\r\n    return\r\n  \r\n  ###\r\n    Returns an Array of keys (indexes) where the Collection properties match the specified value.\r\n    @param [*] value The value to find a match against.\r\n    @return [Array] An Array of indexes where the Collection properties match the specified value.\r\n\r\n    @example Retrieve the keys (indexes) where the value 'dog' can be found.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.indexes('dog');\r\n  ###\r\n  indexes: (value) -> index for index, prop of @_data when value is prop\r\n\r\n  ###\r\n    Concatenate Arrays to the end of the Collection.\r\n    @param [Array] arrays An Array containing a set of Arrays to concatenate to the end of the Collection.\r\n    @param [Boolean] silent (optional, default = false) If true events are not triggered upon any changes to the data.\r\n\r\n    @note As it may be that the Collection is to be updated silently when using this method. The Arrays to concatenate to the end of the Collection has to be wrapped in an Array.\r\n    @example Concatenate a set of Arrays to the end of a collection.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.concat([[1,4,6], ['dog', 'cat']);\r\n\r\n    @example Silently concatenate a set of Arrays to the end of a collection.\r\n      var collection;\r\n      collection = new tweak.Collection();\r\n      collection.concat([['frog', 'toad']], true);\r\n  ###\r\n  concat: (arrays, silent) ->\r\n    @splice @length-1, 0, [].concat(arrays...), silent\r\n    return\r\n\r\n  ###\r\n    Reset the Collection back to defaults\r\n    \r\n    @event changed Triggers a generic event that the store has been updated\r\n  ###\r\n  reset: ->\r\n    @_data = []\r\n    super()\r\n    return\r\n\r\n  ###\r\n    This method directly accesses the Collection's data's every method.\r\n    See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every\r\n  ###\r\n  every: -> @_data.every arguments\r\n\r\n  ###\r\n    This method directly accesses the Collection's data's filter method.\r\n    See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\r\n  ###\r\n  filter: -> @_data.filter arguments\r\n\r\n  ###\r\n    This method directly accesses the Collection's data's forEach method.\r\n    See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\r\n  ###\r\n  forEach: -> @_data.forEach arguments\r\n\r\n  ###\r\n    This method directly accesses the Collection's data's join method.\r\n    See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join\r\n  ###\r\n  join: -> @_data.join arguments\r\n\r\n  ###\r\n    This method directly accesses the Collection's data's map method.\r\n    See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\r\n  ###\r\n  map: -> @_data.map arguments\r\n\r\n  ###\r\n    This method directly accesses the Collection's data's reverse method.\r\n    See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse\r\n\r\n    @param [Boolean] silent (optional, default = false) If true events are not triggered upon any changes.\r\n\r\n    @event changed:#{index} Triggers an event and passes in changed property.\r\n    @event changed Triggers a generic event that the Collection has been updated.\r\n  ###\r\n  reverse: (silent) ->\r\n    result = @_data.reverse()\r\n    if not silent then __fullTrigger @_data, @triggerEvent\r\n    result\r\n\r\n  ###\r\n    This method directly accesses the Collection's data's slice method.\r\n    See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\r\n  ###\r\n  slice: -> @_data.slice arguments\r\n\r\n  ###\r\n    This method directly accesses the Collection's data's some method.\r\n    See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\r\n  ###\r\n  some: -> @_data.some arguments\r\n\r\n  ###\r\n    This method directly accesses the Collection's data's sort method.\r\n    See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\r\n\r\n    @param [Function] fn (optional) If a comparing function is present then this is passed to sort function.\r\n    @param [Boolean] silent (optional, default = false) If true events are not triggered upon any changes.\r\n\r\n    @event changed:#{index} Triggers an event and passes in changed property.\r\n    @event changed Triggers a generic event that the Collection has been updated.\r\n  ###\r\n  sort: (fn, silent = false) ->\r\n    result = if fn? then @_data.sort(fn) else @_data.sort()\r\n    __fullTrigger @_data, @triggerEvent\r\n    result\r\n","###\r\n  This class provides a collection of components. Upon initialisation components\r\n  are dynamically built, from its configuration. The configuration for this\r\n  component is an Array of component names (Strings). The component names are\r\n  then used to create a component. Components nested within those components are\r\n  then initialised creating a powerful scope of nest components that are completely\r\n  unique to themselves.\r\n\r\n  Examples are in JS, unless where CoffeeScript syntax may be unusual. Examples\r\n  are not exact, and will not directly represent valid code; the aim of an example\r\n  is to show how to roughly use a method.\r\n###\r\nclass tweak.Components extends tweak.Collection\r\n   # @property [String] The type of Store, i.e. 'collection', 'components' or 'model'.\r\n  _type: 'components'\r\n\r\n  ###\r\n   Construct the Collection with given options from the Components configuration.\r\n  ###\r\n  init: ->\r\n    @_data = []\r\n    data = []\r\n    _name = @component.name\r\n    for item in @component.config.components\r\n      obj = {}\r\n      if item instanceof Array\r\n        names = tweak.Common.splitMultiName _name, item[0]\r\n        path = tweak.Common.relToAbs _name, item[1]\r\n        for name in names\r\n          @_data.push new tweak.Component @, {name, extends: path}\r\n      else if typeof item is 'string'\r\n        data = tweak.Common.splitMultiName _name, item\r\n        for name in data\r\n          @_data.push new tweak.Component @, {name}\r\n      else\r\n        obj = item\r\n        name = obj.name\r\n        data = tweak.Common.splitMultiName _name, name\r\n        obj.extends = tweak.Common.relToAbs _name, obj.extends\r\n        for prop in data\r\n          obj.name = prop\r\n          @_data.push new tweak.Component @, obj\r\n      @_data[@length++].init()\r\n    return\r\n\r\n  ###\r\n    @private\r\n    Reusable method to render and re-render.\r\n    @param [String] type The type of rendering to do either 'render' or 'rerender'.\r\n  ###\r\n  __componentRender: (type) ->\r\n    if @length is 0\r\n      @triggerEvent 'ready'\r\n    else\r\n      @total = 0\r\n      for item in @_data\r\n        item.controller.addEvent 'ready', ->\r\n          if ++@total is @length then @triggerEvent 'ready'\r\n        , @, 1\r\n        item[type]()\r\n    return\r\n\r\n  ###\r\n    Renders all of its Components.\r\n    @event ready Triggers ready event when itself and its sub-Components are ready/rendered.\r\n  ###\r\n  render: ->\r\n    @__componentRender 'render'\r\n    return\r\n\r\n  ###\r\n    Re-render all of its Components.\r\n    @event ready Triggers ready event when itself and its sub-Components are ready/re-rendered.\r\n  ###\r\n  rerender: ->\r\n    @__componentRender 'rerender'\r\n    return\r\n\r\n  ###\r\n    Find Component with matching data in model.\r\n    @param [String] property The property to find matching value against.\r\n    @param [*] value Data to compare to.\r\n    @return [Array] An array of matching Components.\r\n  ###\r\n  whereData: (property, value) ->\r\n    result = []\r\n    componentData = @_data\r\n    for collectionKey, data of componentData\r\n      modelData = data.model.data or model.data\r\n      for key, prop of modelData when key is property and prop is value\r\n        result.push data\r\n    result\r\n\r\n  ###\r\n    Reset this Collection of components. Also destroys it's components (views removed from DOM).\r\n    @event changed Triggers a generic event that the store has been updated.\r\n  ###\r\n  reset: ->\r\n    for item in @_data\r\n      item.destroy()\r\n    super()\r\n    return","###\r\n  The future of MVC doesn't always lie in web applications; the architecture to\r\n  TweakJS allows for integration of components anywhere on a website. For example\r\n  you can plug \"Web Components\" into your static site; like sliders, accordions.\r\n  The flexibility is endless; allowing MVC to be used from small web components\r\n  to full scale one page web applications.\r\n\r\n  TweakJS wraps its Models, Views, Templates, and Controllers into a Component\r\n  module. The Component module acts intelligently to build up your application\r\n  with simple configuration files. Each Component its built through a config\r\n  object; this allows for powerful configuration with tonnes of flexibility.\r\n  The config objects are extremely handy for making Components reusable, with\r\n  easy accessible configuration settings.\r\n\r\n  Each Component can have sub Components which are accessible in both directions;\r\n  although it is recommended to keep functionality separate it sometimes comes in\r\n  handy to have access to other parts of the application. Each Component can\r\n  extend another Component, which will then inherent the models, views, templates,\r\n  and controllers directly from that Component. If you however want to extend a\r\n  Component using a different Model you can simply overwrite that model, or extend\r\n  the functionality to the inherited model Components model.\r\n\r\n  Examples are in JS, unless where CoffeeScript syntax may be unusual. Examples\r\n  are not exact, and will not directly represent valid code; the aim of an example\r\n  is to show how to roughly use a method.\r\n###\r\nclass tweak.Component\r\n \r\n  # @property [Object]\r\n  model: null\r\n  # @property [Object]\r\n  view: null\r\n  # @property [Object]\r\n  components: null\r\n  # @property [Object]\r\n  controller: null\r\n  # @property [Object]\r\n  router: null\r\n\r\n  modules: ['controller', 'model', 'view', 'router', 'components']\r\n\r\n  ###\r\n    @param [Object] relation Relation to the Component.\r\n    @param [Object] options Configuration for the Component.\r\n  ###\r\n  constructor: (relation, options) ->\r\n    if not options? then throw new Error 'No options given'\r\n\r\n    # Build relation if window and build its default properties\r\n    # The relation is it direct caller\r\n    relation = @relation = if relation is window then {} else relation\r\n    relation.relation ?= {}\r\n    # Get parent Component\r\n    @parent = if relation instanceof tweak.Component then relation else relation.component or relation\r\n    @root = @parent.root or @\r\n    # Set name of Component\r\n    @name = options.name\r\n    if not @name? then throw new Error 'No name given'\r\n    options.name = @name = tweak.Common.relToAbs @parent.name or '', @name\r\n\r\n    @config = @__buildConfig options\r\n    # Router is optional as it is performance heavy\r\n    # So it needs to be explicitly defined in the config for the Component that it should be used\r\n    if @config.router then @__addRouter()\r\n\r\n    # Add modules to the Component\r\n    @__addModel()\r\n    @__addView()\r\n    @__addComponents()\r\n    @__addController()\r\n\r\n    # Add references to the the modules\r\n    for name in @modules when prop = @[name]\r\n      prop.parent = @parent\r\n      prop.component = @\r\n      for name2 in @modules when name isnt name2 and prop2 = @[name2]\r\n        prop[name2] = prop2\r\n\r\n  ###\r\n    When the component is initialised it's modules are also initialised.\r\n  ###\r\n  init: ->\r\n    # Call init on all the modules\r\n    for name in @modules when name isnt 'view' and item = @[name]\r\n      item.init?()\r\n    return\r\n\r\n  ###\r\n    @private\r\n    Builds the configuration object for the Component.\r\n    @param [Object] options Component options.\r\n    @return [Object] Combined config based on the components inheritance.\r\n  ###\r\n  __buildConfig: (options) ->\r\n    configs = []\r\n    paths = @paths = []\r\n\r\n    extension = @name\r\n    if options\r\n      configs.push tweak.Common.clone options\r\n      if options.extends then extension = options.extends\r\n\r\n    # Gets all configs, by configs extension path\r\n    name = @parent?.name or @name\r\n    while extension\r\n      requested = tweak.Common.require name, \"#{extension}/config\", if tweak.strict then null else {}\r\n      # Store all the paths\r\n      paths.push tweak.Common.relToAbs name, extension\r\n      # Push a clone of the config file to remove reference\r\n      configs.push tweak.Common.clone requested\r\n      extension = requested.extends\r\n\r\n    # Combine all the config files into one\r\n    # The values of the config files from lower down the chain have priority\r\n    result = configs[configs.length-1]\r\n    for i in [configs.length-2..0]\r\n      result = tweak.Common.combine result, configs[i]\r\n\r\n    # Set initial values in config if they do not exist\r\n    result.model ?= {}\r\n    result.view ?= {}\r\n    result.controller ?= {}\r\n    result.components ?= []\r\n    result.events ?= {}\r\n    result\r\n\r\n  ###\r\n    @private\r\n    Add a module to the Component, if module can't be found then it will use a surrogate object.\r\n    @param [String] name Name of the module.\r\n    @param [Object] surrogate Surrogate if the module can not be found.\r\n    @param [...] params Parameters passed into the module on construction.\r\n  ###\r\n  __addModule: (name, surrogate, params...) ->\r\n    Module = tweak.Common.findModule @paths, \"./#{name}\", surrogate\r\n    module = @[name] = new Module @config[name], params...\r\n    module.component = @\r\n    module.root = @root\r\n    return\r\n\r\n  ###\r\n    @private\r\n    Short cut method to adding view using the addModule method.\r\n    @param [...] params Parameters passed to into the view constructor.\r\n  ###\r\n  __addView: (params...) ->\r\n    @__addModule 'view', tweak.View, params...\r\n    return\r\n\r\n  ###\r\n    @private\r\n    Short cut method to adding Model using the addModule method.\r\n    @param [...] params Parameters passed to into the model constructor.\r\n  ###\r\n  __addModel: (params...) ->\r\n    @__addModule 'model', tweak.Model, params...\r\n    return\r\n\r\n  ###\r\n    @private\r\n    Short cut method to adding controller using the addModule method.\r\n    @param [...] params Parameters passed to into the controller constructor.\r\n  ###\r\n  __addController: (params...) ->\r\n    @__addModule 'controller', tweak.Controller, params...\r\n    return\r\n\r\n  ###\r\n    @private\r\n    Add module to this Component.\r\n    @param [...] params Parameters passed to into the Components constructor.\r\n  ###\r\n  __addComponents: (params...) ->\r\n    @__addModule 'components', tweak.Components, params...\r\n    return\r\n\r\n  ###\r\n    @private\r\n    Short cut method to adding router using the addModule method.\r\n    @param [...] params Parameters passed to into the router constructor.\r\n  ###\r\n  __addRouter: (params...) ->\r\n    @__addModule 'router', tweak.Router, params...\r\n    return\r\n\r\n  ###\r\n    @private\r\n    Reusable method to render and re-render.\r\n    @param [String] type The type of rendering to do either 'render' or 'rerender'.\r\n  ###\r\n  __componentRender: (type) ->\r\n    @view.addEvent \"#{type}ed\", ->\r\n      @components.addEvent 'ready', ->\r\n        @controller.triggerEvent 'ready'\r\n      , @, 1\r\n      @components[type]()\r\n    , @, 1\r\n    @view[type]()\r\n    return\r\n\r\n  ###\r\n    Renders itself and its subcomponents.\r\n    @event ready Triggers ready event when itself and its Components are ready/rendered.\r\n  ###\r\n  render: ->\r\n    name = @name\r\n    @__componentRender 'render'\r\n    return\r\n\r\n  ###\r\n    Re-renders itself and its subcomponents.\r\n    @event ready Triggers ready event when itself and its Components are ready/re-rendered.\r\n  ###\r\n  rerender: ->\r\n    @__componentRender 'rerender'\r\n    return\r\n\r\n  ###\r\n    Destroy this Component. It will clear the view if it exists; and removes it from the Components Collection.\r\n    @param [Boolean] silent (optional, default = false) If true events are not triggered upon any changes.\r\n  ###\r\n  destroy: (silent) ->\r\n    @view.clear()\r\n    components = @relation.components\r\n    if components?\r\n      i = 0\r\n      for item in components.data\r\n        if item.uid is @uid\r\n          components.remove i, silent\r\n          return\r\n        i++\r\n    return\r\n\r\n  ###\r\n    Short-cut to the controllers findEvent method.\r\n\r\n    @overload findEvent(names, build)\r\n      Find events on controller with a space separated string.\r\n      @param [String] names The event name(s); split on a space.\r\n      @param [Boolean] build (Default = false) Whether or not to add an event object to the controller when none can be found.\r\n      @return [Array<Event>] All event objects that are found/created then it is returned in an Array.\r\n\r\n    @overload findEvent(names, build)\r\n      Find events on controller with an array of names (strings).\r\n      @param [Array<String>] names An array of names (strings).\r\n      @param [Boolean] build (Default = false) Whether or not to add an event object to the controller when none can be found.\r\n      @return [Array<Event>] All the controllers event objects that are found/created then it is returned in an Array.\r\n  ###\r\n  findEvent: (names, build) -> @controller.findEvent names, build\r\n    \r\n\r\n  ###\r\n    Short-cut to the controllers addEvent method.\r\n\r\n    @param [String, Array<String>] names The event name(s). Split on a space, or an array of event names.\r\n    @param [Function] callback The event callback function.\r\n    @param [Number] maximum (Default = null). The maximum calls on the event listener. After the total calls the events callback will not invoke.\r\n    @param [Object] context The contextual object of which the event to be bound to.\r\n  ###\r\n  addEvent: (names, callback, max, context) -> @controller.addEvent names, callback, max, context\r\n\r\n  ###\r\n    Short cut to the controllers removeEvent method.\r\n\r\n    @param [String] names The event name(s). Split on a space, or an array of event names.\r\n    @param [Function] callback (optional) The callback function of the event. If no specific callbacki s given then all the controller events under event name are removed.\r\n    @param [Object] context (default = this) The contextual object of which the event is bound to. If this matches then it will be removed, however if set to null then all events no matter of context will be removed.\r\n  ###\r\n  removeEvent: (names, callback, context) -> @controller.removeEvent names, callback, context\r\n\r\n  ###\r\n    Short cut to the controllers triggerEvent method.\r\n\r\n    @overload triggerEvent(names, params)\r\n      Trigger events on controller by name only.\r\n      @param [String, Array<String>] names The event name(s). Split on a space, or an array of event names.\r\n      @param [...] params Parameters to pass into the callback function.\r\n\r\n    @overload triggerEvent(options, params)\r\n      Trigger events on controller by name and context.\r\n      @param [Object] options Options and limiters to check against callbacks.\r\n      @param [...] params Parameters to pass into the callback function.\r\n      @option options [String, Array<String>] names The event name(s). Split on a space, or an array of event names.\r\n      @option options [Context] context (Default = null) The context of the callback to check against a callback.\r\n  ###\r\n  triggerEvent: (names, params...) -> @controller.triggerEvent names, params...\r\n\r\n  ###\r\n    Shortcut to the controllers updateEvent method.\r\n\r\n    @param [String] names The event name(s). Split on a space, or an array of event names.\r\n    @param [Object] options Optional limiters and update values.\r\n    @option options [Object] context The contextual object to limit updating events to.\r\n    @option options [Function] callback Callback function to limit updating events to.\r\n    @option options [Number] max Set a new maximum calls to an event.\r\n    @option options [Number] calls Set the amount of calls that has been triggered on this event.\r\n    @option options [Boolean] reset (Default = false) If true then calls on an event get set back to 0.\r\n    @option options [Boolean] listen Whether to enable or disable listening to event.\r\n  ###\r\n  updateEvent: (names, options) -> @controller.updateEvent names, options\r\n\r\n  ###\r\n    Resets the controllers events to empty.\r\n  ###\r\n  resetEvents: -> @controller.resetEvents()\r\n\r\n  ###\r\n    This method is used to extract all data of a component. If there is an export method within the Component Controller\r\n    then the Controller export method will be executed with the data returned from the method.\r\n    @param [Object] limit Limit the data from model to be exported\r\n    @return [Object] Extracted data from Component.\r\n  ###\r\n  export: (limit) -> @controller.export?() or model: @model.export limit, components: @components.export()\r\n\r\n  ###\r\n    This method is used to import data into a component. If there is an import method within the Component Controller\r\n    then the Controller import method will be executed with the data passed to the method.\r\n    @param [Object] data Data to import to the Component.\r\n    @option data [Object] model Object to import into the Component's Model.\r\n    @option data [Array<Object>] components Array of Objects to import into the Component's Components.\r\n  ###\r\n  import: (data) ->\r\n    if @controller.import?\r\n      @controller.import data\r\n    else\r\n      if data.model then @model.import data.model\r\n      if data.components then @components.import data.components\r\n","###\r\n  A Controller defines the business logic between other modules. It can be used to\r\n  control data flow, logic and more. It should process the data from the Model,\r\n  interactions and responses from the View, and control the logic between other\r\n  modules.\r\n\r\n  Examples are in JS, unless where CoffeeScript syntax may be unusual. Examples\r\n  are not exact, and will not directly represent valid code; the aim of an example\r\n  is to show how to roughly use a method.\r\n###\r\nclass tweak.Controller extends tweak.Events\r\n  ###\r\n    By default, this does nothing during initialization unless it is overridden.\r\n  ###\r\n  init: ->","###\r\n  Simple cross browser history API. Upon changes to the history a change event is\r\n  called. The ability to hook event listeners to the tweak.History API allows\r\n  routes to be added accordingly, and for multiple Routers to be declared for\r\n  better code structure.\r\n\r\n  Examples are in JS, unless where CoffeeScript syntax may be unusual. Examples\r\n  are not exact, and will not directly represent valid code; the aim of an example\r\n  is to show how to roughly use a method.\r\n###\r\nclass tweak.History extends tweak.Events\r\n  usePush: true\r\n  useHash: false\r\n  started: false\r\n  root: '/'\r\n  iframe: null\r\n  url: null\r\n  __interval: null\r\n  intervalRate: 50\r\n\r\n  ###\r\n    Checks that the window and history is available.\r\n    This addr support for the history to work outside of browsers\r\n    if the window, history and location are set manually.\r\n  ###\r\n  constructor: ->\r\n    if typeof window isnt 'undefined'\r\n      @location = (@window = window).location\r\n      @history = window.history\r\n\r\n  ###\r\n    Start listening to the URL changes to push back the history API if available.\r\n    \r\n    @param [Object] options An optional object to pass in optional arguments\r\n    @option options [Boolean] useHash (default = false) Specify whether to use hashState if true then pushState will be set to false.\r\n    @option options [Boolean] forceRefresh (default = false) When set to true then pushState and hashState will not be used.\r\n    @option options [Number] interval (default = null) When set to a number this is what the refresh rate will be when an interval has to be used to check changes to the URL.\r\n    @option options [Boolean] silent (default = false) If set to true then an initial change event trigger will not be called.\r\n    \r\n    @event changed When the URL is updated a change event is fired from tweak.History.\r\n\r\n    @example Starting the history with auto configuration.\r\n      tweak.History.start();\r\n\r\n    @example Starting the history with forced HashState.\r\n      tweak.History.start({\r\n        hashState:true\r\n      });\r\n\r\n    @example Starting the history with forced PushState.\r\n      tweak.History.start({\r\n        pushState:true\r\n      });\r\n\r\n    @example Starting the history with forced refresh or page.\r\n      tweak.History.start({\r\n        forceRefresh:true\r\n      });\r\n\r\n    @example Starting the history with an interval rate for the polling speed for older browsers.\r\n      tweak.History.start({\r\n        hashState:true,\r\n        interval: 100\r\n      });\r\n\r\n    @example Starting the history silently.\r\n      tweak.History.start({\r\n        hashState:true,\r\n        silent: true\r\n      });\r\n  ###\r\n  start: (options = {}) ->\r\n    # Check if tweak.History is already started\r\n    # If started then return\r\n    return if @started\r\n    @started = true\r\n\r\n    # Set usePush and useHash based on the options passed in.\r\n    usePush = @usePush = if options.useHash then false else @history?.pushState\r\n    useHash = @useHash = not usePush\r\n\r\n    # If the page is to be refreshed on a navigation event then set both useHash and usePush to false\r\n    if options.forceRefresh or (useHash and not `('onhashchange' in this.window)`) then @usePush = @useHash = useHash = usePush = false\r\n\r\n    # Set the interval rate for older browsers\r\n    if options.interval then @intervalRate = options.interval\r\n\r\n    # Set the normalized root for the history to check against.\r\n    @root = root = (\"/#{options.root or '/'}/\").replace /^\\/+|\\/+$/g, '/'\r\n    # Get the current URL\r\n    @url = url = @__getURL()\r\n    location = @location\r\n    # Validate the hash state\r\n    if useHash\r\n      @location.replace \"#{root}##{@__getPath()}#{@__getHash()}\"\r\n    # Validate the push state\r\n    else if usePush and @__getHash() isnt ''\r\n      @set @__getHash(), {replace: true}\r\n\r\n    # If the browser doesn't support hash or pushState and it isn't being forced to be refreshed\r\n    if not usePush and not useHash and not options.forceRefresh\r\n      # Creates a simple iframe element attaching to the body to trick IE into having a usable history\r\n      frame = document.createElement 'iframe'\r\n      frame.src = 'javascript:0'\r\n      frame.style.display = 'none'\r\n      frame.tabIndex = -1\r\n      body = document.body\r\n      @iframe = body.insertBefore(frame, body.firstChild).contentWindow\r\n      @__setHash @iframe, \"##{url}\", false\r\n\r\n    @__toggleListeners()\r\n    if not options.silent then return @triggerEvent 'changed', @url.replace /^\\/+/, ''\r\n  \r\n  ###\r\n   Stop tweak.History. Most likely useful for a web component that uses the history to change state,\r\n   but if removed from page then component may want to stop the history.\r\n  ###\r\n  stop: ->\r\n    @__toggleListeners 'remvoe'\r\n    @started = false\r\n\r\n  ###\r\n    Set the URL and add the URL to history.\r\n    \r\n    @param [Object] options An optional object to pass in optional arguments.\r\n    @option options [Boolean] replace (default = false) Specify whether to replace the current item in the history.\r\n    @option options [Boolean] silent (default = true) Specify whether to allow triggering of event when setting the URL.\r\n\r\n    @example Setting the History (updating the URL).\r\n      tweak.History.set('/#/fake/url');\r\n\r\n    @example Replacing the last History state (updating the URL).\r\n      tweak.History.set('/#/fake/url', {\r\n        replace:true\r\n      });\r\n\r\n    @example Setting the History (updating the URL) and calling history change event.\r\n      tweak.History.set('/#/fake/url', {\r\n        silent:false\r\n      });\r\n  ###\r\n  set: (url, options = {}) ->\r\n    # If the history isn't started then return\r\n    if not @started then return\r\n    # Set silent option to true if it is null\r\n    options.silent ?= true\r\n    replace = options.replace\r\n\r\n    # Get the current URL formatted and validated\r\n    url = @__getURL(url) or ''\r\n\r\n    # Get root without slash or question mark\r\n    root = @root\r\n    if url is '' or url.charAt(0) is '?'\r\n      root = root.slice(0, -1) or  '/'\r\n\r\n    # Create full URL with root\r\n    fullUrl = \"#{root}#{url.replace /^\\/*/, ''}\"\r\n\r\n    # Strip the hash from the URL and decode\r\n    url = decodeURI url.replace /#.*$/, ''\r\n\r\n    # If the URL is the previous URL then return otherwise change current URL to current URL\r\n    if @url is url then return\r\n    @url = url\r\n\r\n    # If pushState is available we can replace the current history state or add a state to the history\r\n    if @usePush\r\n      @history[if replace then 'replaceState' else 'pushState'] {}, document.title, fullUrl\r\n    else if @useHash\r\n      # If hash is is available then update the hash\r\n      @__setHash @window, url, replace\r\n      if @iframe and url isnt @__getHash @iframe\r\n        @__setHash @iframe, url, replace\r\n    else\r\n      # Forces refresh of page if not using push of hash state\r\n      # Return as the page is refreshing at that point\r\n      @location.assign fullURL\r\n      return\r\n    # If the option not to be silent is made then send a change event\r\n    if not options.silent then @triggerEvent 'changed', (@url = url).replace /^\\/+/, ''\r\n    return\r\n\r\n  __toggleListener = (prefix, type, fn)->\r\n    if window.addEventListener\r\n      element[prefix+'EventListener'] type, fn\r\n    else if window.attachEvent\r\n      attach = if prefix is 'on' then 'attach' else 'detach'\r\n      element[attach+'Event'] \"prefix#{type}\", fn\r\n    else\r\n      element[prefix+type] = fn\r\n  \r\n  ###\r\n    @private\r\n    Add listeners of remove history change listeners.\r\n    @param [String] prefix (Default = 'add') Set the prefix - 'add' or 'remove'.\r\n  ###\r\n  __toggleListeners: (prefix = 'add') ->\r\n    # Setup or remove event triggers for when the history updates - depending on the type of state being used.\r\n    if @pushState\r\n      # If a pushState is available\r\n      __toggleListener 'popstate', @__checkChanged\r\n    else if @useHash and not @iframe\r\n      # If hashState is available and not using an iframe\r\n      __toggleListener 'hashchange', @__checkChanged\r\n\r\n    else if @useHash\r\n      # If using iframe and hash state\r\n      if prefix is 'add'\r\n        @__interval = setInterval @__checkChanged, @intervalRate\r\n      else\r\n        clearInterval @__interval\r\n        document.body.removeChild @iframe.frameElement\r\n        @iframe = @__interval = null\r\n    return\r\n\r\n  ###\r\n    @private\r\n    Get the URL formatted without the hash.\r\n    @param [Window] window The window to retrieve hash.\r\n    @return Normalized URL without hash.\r\n  ###\r\n  __getHash: (window) ->\r\n    match = (window or @).location.href.match /#(.*)$/\r\n    return if match then match[1] else ''\r\n\r\n  ###\r\n    @private\r\n    Get search part of url\r\n    @return search if it matches or return empty string.\r\n  ###\r\n  __getSearch: ->\r\n    match = @location.href.replace(/#.*/, '').match /\\?.+/\r\n    return if match then match[0] else ''\r\n\r\n  ###\r\n    @private\r\n    Get the pathname and search parameters, without the root.\r\n    @return Normalized URL.\r\n  ###\r\n  __getPath: ->\r\n    path = decodeURI \"#{@location.pathname}#{@__getSearch()}\"\r\n    root = @root.slice 0, -1\r\n    if not path.indexOf root then path = path.slice root.length\r\n    return if path.charAt(0) is '/' then path.slice 1 else path\r\n\r\n  ###\r\n    @private\r\n    Get a normalized URL.\r\n    @param [String] URL The URL to normalize - if null then URL will be retrieved from window.location.\r\n    @param [Boolean] force Force the returning value to be hash state.\r\n    @return Normalized URL without trailing slashes at either side.\r\n  ###\r\n  __getURL: (url, force) ->\r\n    # If the URL is null then a URL will be retrieved from window.location\r\n    if not url?\r\n      # If usePush or if to be forced to retrieve this format\r\n      if @usePush or force\r\n        # Get the URL decoded\r\n        url = decodeURI \"#{@location.pathname}#{@location.search}\"\r\n        # Get the root without trailing slash\r\n        root = @root.replace /\\/$/, ''\r\n        # Get the URL minus the root\r\n        if not url.indexOf(root) then url = url.slice root.length\r\n      else\r\n        # Get the hash\r\n        url = @__getHash()\r\n\r\n    # Return URL without trailing slashes and force one at start\r\n    url = url.replace /^\\/{2,}/g, '/'\r\n    if not url.match(/^\\/+/) then url =\"/#{url}\"\r\n    url.replace /\\/+$/g, ''\r\n\r\n  ###\r\n    @private\r\n    Change the hash or replace the hash.\r\n    @param [Location] location The location to amend the hash to. ieFrame.location or the window.location.\r\n    @param [String] URL The URL to replace the current hash with.\r\n    @param [Boolean] replace Whether to replace the hash by href or to change hash directly.\r\n  ###\r\n  __setHash: (window, url, replace) ->\r\n    if @iframe is window then window.document.open().close()\r\n    # Some browsers require that the hash contains a leading #\r\n    if replace\r\n      window.location.replace \"#{location.href.replace /(javascript:|#).*$/, ''}##{url}\"\r\n    else\r\n      window.location.hash = \"#{url}\"\r\n    return\r\n\r\n  ###\r\n    @private\r\n    Check whether the URL has been changed, if it has then trigger change event.\r\n  ###\r\n  __checkChanged: =>\r\n    now = @__getURL()\r\n    old = @url\r\n    if now is old\r\n      if @iframe\r\n        now = @__getHash @iframe\r\n        @set now\r\n      else return false\r\n    @triggerEvent 'changed', @url = now\r\n    true\r\n\r\ntweak.History = new tweak.History()","###\r\n  A Model is used by other modules like the Controller to store, retrieve and\r\n  listen to a set of data. Tweak.js will call events through its\r\n  **event system** when it is updated, this makes it easy to listen to updates and\r\n  to action as and when required. The Model’s data is not a database, but a JSON\r\n  representation of its data can be exported and imported to and from storage\r\n  sources. In Tweak.js the Model extends the Store module - which is the core\r\n  functionality shared between the Model and Collection. The main difference\r\n  between a Model and collection it the base of its storage. The Model uses an\r\n  object to store its data and a collection base storage is an Array.\r\n\r\n  Examples are in JS, unless where CoffeeScript syntax may be unusual. Examples\r\n  are not exact, and will not directly represent valid code; the aim of an\r\n  example is to show how to roughly use a method.\r\n###\r\nclass tweak.Model extends tweak.Store\r\n  # @property [String] The type of Store, i.e. 'collection' or 'model'.\r\n  _type: 'model'\r\n\r\n  ###\r\n    The constructor initialises the controllers unique ID and its initial data.\r\n\r\n    @example Creating a Model with predefined set of data\r\n      var model;\r\n      model = new tweak.Model({\r\n        'demo':true,\r\n        'example':false,\r\n        'position':99\r\n      });\r\n  ###\r\n  constructor: (@_data = {}) ->\r\n\r\n  ###\r\n    Remove a single property or many properties.\r\n    @param [String, Array<String>] properties Array of property names to remove from a Model, or single String of the name of the property to remove.\r\n    @param [Boolean] silent (optional, default = false) If true events are not triggered upon any changes.\r\n\r\n    @event removed:#{key} Triggers an event based on what property has been removed.\r\n    @event changed Triggers a generic event that the Model has been updated.\r\n\r\n    @example Removing a single property.\r\n      var model;\r\n      model = new tweak.Model();\r\n      model.remove('demo');\r\n\r\n    @example Removing multiple properties.\r\n      var model;\r\n      model = new tweak.Model();\r\n      model.remove(['demo', 'example']);\r\n\r\n    @example Removing properties silently.\r\n      var model;\r\n      model = new tweak.Model();\r\n      model.remove(['demo', 'example'], true);\r\n      model.remove('position', true);\r\n  ###\r\n  remove: (properties, silent) ->\r\n    if typeof properties is 'string' then properties = [properties]\r\n    for property in properties\r\n      for key, prop of @_data when key is property\r\n        @length--\r\n        delete @_data[key]\r\n        if not silent then @triggerEvent \"removed:#{key}\"\r\n\r\n    if not silent then @triggerEvent 'changed'\r\n    return\r\n\r\n  ###\r\n    Looks through the store for where the data matches.\r\n    @param [*] property The property data to find a match against.\r\n    @return [Array] Returns an array of the positions of the data.\r\n  ###\r\n  pluck: (property) ->\r\n    result = []\r\n    for key, prop of @_data\r\n      if prop is property then result.push key\r\n    result\r\n\r\n  ###\r\n    Reset the Model back to defaults.\r\n    @event changed Triggers a generic event that the Model has been updated.\r\n  ###\r\n  reset: ->\r\n    @_data = {}\r\n    super()\r\n    return","###\r\n  Web applications often provide linkable, bookmark, shareable URLs for important\r\n  locations in the application. The Router module provides methods for routing to\r\n  events which can control the application. Traditionally it used to be that\r\n  routers worked from hash fragments (#page/22). However, the HTML5 History API now\r\n  provides standard URL formats (/page/22). Routers provide functionality that\r\n  links applications/components/modules together through data passed through the URL.\r\n\r\n  The router's routes can be formatted as a string that provides additional easy\r\n  management to routing of events. A route can contain the following structure.\r\n  Which implements splats, parameters and optional parameters.\r\n  \r\n  @example Route with parameters\r\n    Adding a route ':section:page' or ':section/:page' attached to the event of 'navigation', will trigger a\r\n    'navigation' event and pass the following data with a similar HashState of '/#/5/93'.\r\n    {\r\n      url:'/5/93',\r\n      data:{\r\n        section:'5',\r\n        page:'93'\r\n      }\r\n    }\r\n  \r\n  @example Route with parameters one being optional\r\n    Adding a optional parameter route ':section?page' or ':section/?page' attached to the event of 'navigation',\r\n    will trigger a 'navigation' event and pass the following data with a similar HashState of '/#/5/6'.\r\n    {\r\n      url:'/5/6',\r\n      data:{\r\n        section:'5',\r\n        page:'6'\r\n      }\r\n    }\r\n\r\n    Adding a optional parameter route ':section?page' or ':section/?page' attached to the event of 'navigation',\r\n    will trigger a 'navigation' event and pass the following data with a similar HashState of '/#/5'.\r\n    {\r\n      url:'/5',\r\n      data:{\r\n        section:'5'\r\n      }\r\n    }\r\n  \r\n  @example Route with splat\r\n    Adding a splat route ':section:page/*' or ':section/:page/*' attached to the event of 'navigation', will\r\n    trigger a 'navigation' event and pass the following data with a similar HashState of '/#/5/6/www.example.com'.\r\n    {\r\n      url:'/5/6/www.example.com',\r\n      data:{\r\n        section:'5',\r\n        page:'6',\r\n        splat:'www.example.com'\r\n      }\r\n    }\r\n  \r\n  @example URL with query string\r\n    When you want to use URLs that contain a query string, '/blog?id=9836384&light&reply=false', then the data\r\n    sent back to an event will look like:\r\n    {\r\n      url:'/blog?id=9836384&light&reply=false',\r\n      data:{\r\n        blog:{\r\n          id:9836384,\r\n          light:'true',\r\n          reply:'false'\r\n        }\r\n      }\r\n    }\r\n\r\n  Examples are in JS, unless where CoffeeScript syntax may be unusual. Examples\r\n  are not exact, and will not directly represent valid code; the aim of an example\r\n  is to show how to roughly use a method.\r\n###\r\nclass tweak.Router extends tweak.Events\r\n  # @property [Integer] The uid of this object - for unique reference.\r\n  uid: 0\r\n  # @property [Method] see tweak.super\r\n  super: tweak.super\r\n\r\n  ###\r\n    The constructor initialises the routers unique ID, routes, and event listening.\r\n    \r\n    @param [object] routes (optional, default = {}) An object containing event name based keys to an array of routes.\r\n\r\n    @example Creating a Router with a set of predefined routes.\r\n      var router;\r\n      router = new tweak.Router({\r\n        'navigation':[\r\n          ':section/:page',\r\n          /:website/:section/?page\r\n        ],\r\n        'demo':[\r\n          ':splat/:example/*'\r\n        ]\r\n      });\r\n  ###\r\n  constructor: (@routes = {}) ->\r\n    tweak.History.addEvent 'changed', @__urlChanged, @\r\n\r\n  ###\r\n    Add a route to the Router.\r\n    @param [String] event The event name to add route to.\r\n    @param [String, Reg-ex] route A string or Reg-ex formatted string or Reg-ex.\r\n\r\n    @example Adding a single string formatted route to an event.\r\n      var router;\r\n      router = new tweak.Router();\r\n      router.add('navigation', '/:section/:page');\r\n  \r\n    @example Adding a single Reg-ex formatted route to an event.\r\n      var router;\r\n      router = new tweak.Router();\r\n      router.add('navigation', /^(*.)$/);\r\n  ###\r\n  add: (event, route) ->\r\n    # If the route event exists then push route to existing event\r\n    if @routes[event]? then @routes[event].push route\r\n    # If route event doesn't exist create a new route event attaching the route\r\n    else @routes[event] = [route]\r\n    return\r\n\r\n  ###\r\n    @overload remove(event, route)\r\n      Remove a single string formatted route from an event.\r\n      @param [String] event The event name to add route to.\r\n      @param [String] route A string formatted string. (':section/:page')\r\n\r\n    @overload remove(event, route)\r\n      Remove a string containing multiple string formatted routes from an event.\r\n      @param [String] event The event name to add route to.\r\n      @param [String] route A string containing multiple string formatted routes. (':section/:page :section/:page/*')\r\n\r\n    @overload remove(event, route)\r\n      Remove a single Reg-ex formatted route from an event.\r\n      @param [String] event The event name to add route to.\r\n      @param [Boolean] route A Reg-ex formatted route. (/^.*$/)\r\n    \r\n    @example Removing a single string formatted route from an event\r\n      var router;\r\n      router = new tweak.Router();\r\n      router.remove('navigation', '/:section/:page');\r\n\r\n    @example Removing a multiple string formatted routes from an event.\r\n      var router;\r\n      router = new tweak.Router();\r\n      router.remove('navigation', '/:section/:page /:website/:section/?page');\r\n  \r\n    @example Removing a single Reg-ex formatted route from an event.\r\n      var router;\r\n      router = new tweak.Router();\r\n      router.remove('navigation', /^(*.)$/);\r\n  ###\r\n  remove: (event, routes) ->\r\n    routers = @routes[event]\r\n    # Check the route type and removes accordingly\r\n    if typeof routes is 'string'\r\n      for route in \" #{routes.replace /\\s+/g, ' '} \".split ' '\r\n        routers = \" #{routers.join ' '} \".split \" #{route} \"\r\n    else\r\n      for key, route of routers\r\n        if route is routes then delete routers[key]\r\n    # Update event routes\r\n    @routes[event] = routers\r\n\r\n    # If no routes specified in parameter then remove all or if the total routes is now none.\r\n    if routers? and (not routes? or routers.length is 0)\r\n      delete @routes[event]\r\n    return\r\n\r\n  ###\r\n    @private\r\n    Reg-ex to get parameters from a URL.\r\n  ###\r\n  __paramReg = /\\/?[?:]([^?\\/:]*)/g\r\n\r\n  ###\r\n    @private\r\n    Checks URL segment to see if it can extract additional data when formatted like a query string.\r\n    @param [String] segment The URL segment to extract additional data when formatted as a query string.\r\n    @return [Object, String] Extracted data of given segment parameter.\r\n  ###\r\n  __getQueryData = (segment) ->\r\n    # Retrieve query string from end of the segment, query string is delimited by a ? character\r\n    query = /^.*\\?(.+)/.exec segment\r\n    # If query string exists\r\n    if query\r\n      # Get the parameters by spitting on the & character\r\n      params = /([^&]+)&*/.exec query[1]\r\n      if params\r\n        # Get the data from the parameter\r\n        for option in params\r\n          segment = {}\r\n          props = /(.+)[:=]+(.+)|(.+)/.exec segment\r\n          if props\r\n            key = props[3] or props[1]\r\n            # If there is no value from parameters then set it to the value of 'true'\r\n            prop = props[2] or 'true'\r\n            segment[key] = prop\r\n    else if segment\r\n      # If there is no valid query string remove any ? characters\r\n      segment = segment.replace /\\?/g, ''\r\n\r\n    # Return the segment if no query string is found or if query string then return its data\r\n    segment\r\n\r\n  ###\r\n    @private\r\n    Converts a string formatted route into its Reg-ex counterpart.\r\n    @param [String] route The route to convert into a Reg-ex formatted route.\r\n    @return [Reg-ex] The Reg-ex formatted route of given string formatted route.\r\n  ###\r\n  __toRegex = (route) ->\r\n    # Reg-ex to escape characters for the returned Reg-ex\r\n    escapeReg = /[\\-\\\\\\^\\[\\]\\s{}+.,$|#]/g\r\n    # Reg-ex to be able to retrieve the splat from end of URL\r\n    splatReg = /\\/?(\\*)$/\r\n\r\n    # Escape the route\r\n    route = route.replace escapeReg, '\\\\$&'\r\n    # Retrieve optional and non-optional parameters from route\r\n    route = route.replace __paramReg, (match) ->\r\n      # The Reg-ex equivalent to a non-optional parameter\r\n      res = '\\\\/?([^\\\\/]*?)'\r\n      # If the parameter is optional then wrap the Reg-ex equivalent to make it an optional Reg-ex equivalent\r\n      if /^\\/?\\?/.exec match then \"(?:#{res})?\" else res\r\n    # Replace the splat to its Reg-ex equivalent\r\n    route = route.replace splatReg, '\\\\/?(.*?)'\r\n    # Return the Reg-ex equivalent\r\n    new RegExp \"^#{route}[\\\\/\\\\s]?$\"\r\n\r\n  ###\r\n    @private\r\n    Get the parameter keys from a string formatted route to use as the data passed to event.\r\n    @param [String] route The string formatted route to get parameter keys from.\r\n  ###\r\n  __getKeys = (route) ->\r\n    res = route.match(__paramReg) or []\r\n    res.push 'splat'\r\n    res\r\n  \r\n  ###\r\n    @private\r\n    When history event is made this method is called to check this Routers events to see if any route events can be triggered.\r\n    @param [String] url A URL to check route events to.\r\n    @event {event_name} Triggers a route event with passed in data from URL.\r\n  ###\r\n  __urlChanged: (url) ->\r\n    # Remove trailing slashes from url\r\n    url = url.replace /^\\/+|\\/+$/g, ''\r\n\r\n    # For each route event\r\n    for event, routes of @routes\r\n      # For each route in the route events routes\r\n      for route in routes\r\n        keys = []\r\n        # If the route is a string formatted route\r\n        if typeof route is 'string'\r\n          # Get the keys of this string formatted route\r\n          keys = __getKeys route\r\n          # Get the Reg-ex equivalent of the string formatted route\r\n          route = __toRegex route\r\n        # Check the reg-ex to the URL\r\n        if match = route.exec url\r\n          # Create the data to pass into event\r\n          res = {url, data: {}}\r\n          match.splice 0,1\r\n          key = 0\r\n          for item in match\r\n            res.data[keys[key]?.replace(/^[?:\\/]*/, '') or key] = __getQueryData item\r\n            key++\r\n          # Trigger this route event with the retrieved data from the URL\r\n          @triggerEvent event, res","###\r\n  A View is a module used as a presentation layer. Which is used to render,\r\n  manipulate and listen to an interface. The Model, View and Controller separates\r\n  logic of the Views interaction to that of data and functionality. This helps to\r\n  keep code organized and tangle free - the View should primarily be used to render,\r\n  manipulate and listen to the presentation layer. A View consists of a template to\r\n  which data is bound to and rendered/re-rendered.\r\n\r\n  Examples are in JS, unless where CoffeeScript syntax may be unusual. Examples\r\n  are not exact, and will not directly represent valid code; the aim of an example\r\n  is to show how to roughly use a method.\r\n###\r\nclass tweak.View extends tweak.Events\r\n \r\n  $ = tweak.$\r\n\r\n  ###\r\n    Default initialiser function - called when the View has rendered\r\n  ###\r\n  init: ->\r\n\r\n  ###\r\n    Default template method. This is used to generate a html fro a template engine ect, to be used during the rendering\r\n    process.By default this method will generate a template through handlebars, it will also seek out the handlebars\r\n    template through the module loader.\r\n    @return [String] Returns a string representaion of HTML to attach to view during render.\r\n  ###\r\n  template: ->\r\n    config = @component.config.view or {}\r\n    (if config.template then tweak.Common.require config.template else tweak.Common.findModule @component.paths, './template') config.data or @model._data\r\n\r\n  ###\r\n    Default attach method. This is used to attach a HTML string to an element. You can override this method with your\r\n    own attachment functionality.\r\n\r\n    @param [DOMElement] element A DOMElement or a string representing a selector query if using a selector engine.\r\n    @param [String] content A HTML representation of a string\r\n    @return [DOMElement] Returns athe attached DOMElement\r\n  ###\r\n  attach: (parent, content) ->\r\n    content = $(content)[0]\r\n    switch method = @component.config.view?.attach?.method\r\n      when 'prefix', 'before'\r\n        parent.insertBefore content, parent.firstChild\r\n        return parent.firstElementChild\r\n      when 'replace'\r\n        for item in parent.children\r\n          try\r\n            parent.removeChild item\r\n          catch e\r\n        parent.appendChild content\r\n        return parent.firstElementChild\r\n      else\r\n        if /^\\d+$/.test \"#{method}\"\r\n          num = Number(method)\r\n          parent.insertBefore content, parent.children[num]\r\n          return parent.children[num]\r\n        else\r\n          parent.appendChild content\r\n          return parent.lastElementChild\r\n\r\n  ###\r\n    Checks to see if the item is attached to ; this is determined if the node has a parentNode.\r\n    @return [Boolean] Returns whether the View has been rendered.\r\n  ###\r\n  isAttached: (element = @el, parent = document.documentElement) -> parent.contains element\r\n\r\n  ###\r\n    Renders the View, using a html template engine. The View is loaded asynchronously, this prevents the DOM from\r\n    from congesting during rendering. The View won't be rendered until its parent View is rendered and any other\r\n    components Views that are waiting to be rendered; this makes sure that components are rendered into in there\r\n    correct positions.\r\n    \r\n    @param [Boolean] silent (Optional, default = false) If true events are not triggered upon any changes.\r\n    @event rendered The event is called when the View has been rendered.\r\n  ###\r\n  render: (silent) ->\r\n    if @isAttached() and not silent then return @triggerEvent 'rendered'\r\n\r\n    config = @component.config.view\r\n\r\n    _getAttachment = (parent) =>\r\n      child = null\r\n      if not parent then return\r\n      # The result is the parent el, or it will try to find a node to attach to in the DOM\r\n      check = (elements) =>\r\n        for prop in elements\r\n          if child then break\r\n          attachment = prop.getAttribute 'data-attach'\r\n          if attachment? and not attachment.match /\\s+/\r\n            for val in tweak.Common.splitMultiName @component.parent.name or '', attachment\r\n              if name is val\r\n                child = prop\r\n                break\r\n      name = config.attach?.to or @component.name\r\n      check parent\r\n      check $('[data-attach]', parent)\r\n      child\r\n    \r\n    # Attach template to the DOM and set @el\r\n    attachTo = config?.attach?.to or @component.name\r\n    parent = @component.parent?.view?.el\r\n    attachment = _getAttachment(parent) or _getAttachment(document.documentElement) or parent or document.documentElement\r\n    \r\n    @$el = $(@attach attachment, @template())\r\n    @el = @$el[0]\r\n      \r\n    # Add class names\r\n    names = tweak.Common.clone @component.paths\r\n    if names.indexOf(@component.name) is -1 then names.unshift @component.name\r\n    classNames = for name in names then name.replace /[\\/\\\\]/g, '-'\r\n    @$el.addClass classNames.join ' '\r\n\r\n    if not silent then @triggerEvent 'rendered'\r\n    @init()\r\n    return\r\n\r\n  ###\r\n    Clears and element and removes event listeners on itself and child DOM elements.\r\n    @param [String, DOMElement] element A DOMElement or a string representing a selector query if using a selector engine.\r\n  ###\r\n  clear: (element = @el) ->\r\n    $(element).remove()\r\n    return\r\n\r\n  ###\r\n    Select a DOMElement using a selector engine dependency affixed to the tweak.Selector object.\r\n    @param [String, DOMElement] element A DOMElement or a string representing a selector query if using a selector engine.\r\n    @param [DOMElement] root (Default = @el) The element root to search for elements with a selector engine.\r\n    @return [Array<DOMElement>] An array of DOMElements.\r\n  ###\r\n  element: (element, root= @el) ->\r\n    if element instanceof Array\r\n      $ item, root for item in element\r\n    else $ element, root"]}